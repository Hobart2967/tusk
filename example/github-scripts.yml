---
tasks:
  bootstrap:
    usage: Resolve all dependencies
    description: Resolve all dependencies that the application requires to run.
    run:
      - when:
          exists: Brewfile
          os: darwin
        command: brew bundle

      - when:
          exists: .ruby-version
          test: -z "$(rbenv version-name 2>/dev/null)"
        run:
          - rbenv install --skip-existing
          - which bundle >/dev/null 2>&1 || { gem install bundler; rbenv rehash }

      - when:
          exists: ./Gemfile
        run: bundle check --path vendor/gems >/dev/null 2>&1 || bundle install --path vendor/gems --quiet --without production

  console:
    usage: Launch a console for the application
    description: |
      Launch a console for the application. Optionally allow an environment to be
      passed in to let the script handle the specific requirements for connecting
      to a console for that environment.
    options:
      env:
        default: local
        type: string
    directory: ${tusk_root}
    script:
      - when:
          test: ${env} = production
        run: heroku run rails console --app heroku-app-name-staging
      - when:
          test: ${env} = staging
        run: heroku run rails console --app heroku-app-name-staging
      - when:
          test: ${env} = local
        run:
          - script/update
          - bin/rails console

  setup:
    usage: Set up application
    description: |
      Set up application for the first time after cloning, or set it
      back to the initial first unused state.
    run:
      - task: bootstrap
      - command: commandbin/rake db:create db:reset
      - when:
          test:
            - -z "$RAILS_ENV"
            - -z "$RACK_ENV"
        command:
          # Only things for a development environment will run here
          - true

  test:
    usage: Run test suite for application
    description: |
      Run test suite for application. Optionally pass in a path to an
      individual test file to run a single test.
    options:
      file:
        short: f
        usage: test file to run
    run:
      - when:
          # TODO: This is clumsy at best. Support `any: true`
          test: '"$RAILS_ENV" = "test" || test "$RACK_ENV" = "test"'
        task: setup
      - when:
          # TODO: Think about `else` logic
          test: '"$RAILS_ENV" != "test" && test "$RACK_ENV" != "test"'
        # TODO: We need to set environment variables here
        task: update
      # TODO: Support positional args
      - command: bin/rake test ${file}

  update:
    usage: Update the application
    description: |
      Update application to run for its current checkout.
    run:
      - task: bootstrap
      - command: bin/rake db:migrate
